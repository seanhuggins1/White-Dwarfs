% function [indepVar,state] = RK2Integrator(derivsRK, indepVarSpan,  step, initialState )
%
% RK2Integrator performs an integration of a system of coupled first order
% ODEs pertaining to a problem we wish to solve
%
% Required Input:
% ===============
%
% derivsRK	(:) the name of a function which returns derivatives of state
%               variables with respect to the independent variable, and pertains to the
%               problem we wish to solve
% indepVar (:) the current value of the independent variable
% step (:) the size of the integration step (constant)
% state (:) the current state variables
%  
% Output:
% =======
%
% newIndepVar	(:) returns the value of the independent variable at a
%                   forward integration step
% newState (:) returns the value of the state variables at a forward integration step            
%
% Requires: no external m-files
% =========
%
% Example Use: [dvdt,dxdt] = RK2Step('ballrk', 6, 0.01, [5; 8; 3; 7]);
% ============
%
% Author:
% =======
%
% SHuggins 25 Nov. 2018
%
function [newIndepVar, newState] = RK2Step(derivsRK, indepVar, step, state)

    %Calculate xstar
    xstar = state + ((1/2)*step).*feval(derivsRK, indepVar, state);
    %Update the state using 2nd order Runge Kutta
    newState = state + step.*feval(derivsRK,indepVar + (1/2)*step, xstar);
 
    %Return our independent variable along with the state
    newIndepVar = indepVar + step;
     
end

